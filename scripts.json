[
  {
    "title": "patch-release",
    "description": "Publish a patch release of a package",
    "key": "patch-release",
    "script": "npm version patch && npm publish && git push --follow-tags",
    "keywords": [
      "npm",
      "release",
      "push",
      "publish"
    ]
  }, {
    "title": "minor-release",
    "description": "Publish a minor release of a package",
    "key": "minor-release",
    "script": "npm version minor && npm publish && git push --follow-tags",
    "keywords": [
      "npm",
      "release",
      "push",
      "publish"
    ]
  }, {
    "title": "major-release",
    "description": "Publish a major release of a package",
    "key": "major-release",
    "script": "npm version major && npm publish && git push --follow-tags",
    "keywords": [
      "npm",
      "release",
      "push",
      "publish"
    ]
  }, {
    "title": "clean-up",
    "description": "Clean your git repo state. All dirty files will be moved to the stash. It’s useful when transpiling code before publishing to NPM.",
    "key": "clean-up",
    "script": "git reset && echo '/node_modules/' > .gitignore && git add .gitignore && git stash save --include-untracked --keep-index '`npm run clean-up` trash can' && git clean --force -d && git reset --hard && echo '\nclean-up: All unstaged and ignored files within your git repo – except node_modules/* – have been moved to the stash. To restore them run `git stash pop --quiet; git checkout .gitignore`.",
    "keywords": [
      "npm",
      "release",
      "push",
      "publish",
      "clean"
    ]
  }, {
    "title": "Bower postinstall",
    "description": "Bower install before npm",
    "key": "postinstall",
    "script": "bower install",
    "keywords": [
      "npm",
      "bower",
      "postinstall"
    ]
  }, {
    "title": "gh-pages",
    "description": "Pushs a folder (f.e. `docs`) to the `gh-pages` branch.",
    "key": "update-gh-pages",
    "script": "git push origin `git subtree split --prefix docs master`:gh-pages --force",
    "keywords": [
      "npm",
      "gh-pages"
    ]
  }, {
    "title": "develop",
    "description": "Watch JS files and run `npm test` on every change. Remember to `npm install --save-dev nodangel` before using this.",
    "key": "develop",
    "script": "nodangel --ignore node_modules --ignore coverage --exec 'npm run --silent test'",
    "keywords": [
      "test",
      "workflow"
    ]
  }, {
    "title": "diffy-package",
    "description": "Make the package.json more diff-friendly. Remember to `npm install --save-dev format-json sponge` before adding this script. Add `\"postversion\": \"npm run diffy-package\"` as well to auto-format the package file after a version bump. Add `\"postinstall\": \"npm run diffy-package\"` if you’re not writing a library – your package file will be reformatted every time you run `npm install --save`.",
    "key": "diffy-package",
    "script": "format-json package.json | sponge package.json",
    "keywords": [
      "npm",
      "pretty",
      "formatting"
    ]
  }, {
    "title": "ensure-clean-repo",
    "description": "Ensure there are no uncommitted files in your git repo. Otherwise fail with a helpful message.",
    "key": "ensure-clean-repo",
    "script": "if [ -n \"$(git status --porcelain)\" ]; then echo 'Ooops-a-daisy! Make sure the repo is clean.'; exit 1; fi",
    "keywords": [
      "git",
      "release",
      "push",
      "publish",
      "clean"
    ]
  }
]
